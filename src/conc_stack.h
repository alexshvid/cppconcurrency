#ifndef CONC_STACK_H
#define CONC_STACK_H

#include <exception>
#include <mutex>
#include <stack>
#include <memory>

namespace conc {

/***************************************************************************//**
 *
 ******************************************************************************/
struct empty_stack : std::exception {
    const char *what() const throw();
};

/***************************************************************************//**
 *
 ******************************************************************************/
template <typename T>
class stack {
public:
    /***********************************************************************//**
     *
     **************************************************************************/
    stack();

    /***********************************************************************//**
     *
     **************************************************************************/
    stack(const stack& other);
    
    /***********************************************************************//**
     *
     **************************************************************************/
    stack& operator=(const stack&) = delete;
    
    /***********************************************************************//**
     *
     **************************************************************************/
    void push(T val);
    
    /***********************************************************************//**
     *
     **************************************************************************/
    std::shared_ptr<T> pop();
    
    /***********************************************************************//**
     *
     **************************************************************************/
    void pop(T& value);
    
    /***********************************************************************//**
     *
     **************************************************************************/
    bool empty() const;

private:
    /***********************************************************************//**
     *
     **************************************************************************/
    std::stack<T> data;
    
    /***********************************************************************//**
     *
     **************************************************************************/
    mutable std::mutex m;
};

} // namespace conc

#include "conc_stack.hpp"

#endif // CONC_STACK_H
